/* Generated By:JavaCC: Do not edit this line. MiniJavaParserConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LPAR = 11;
  /** RegularExpression Id. */
  int RPAR = 12;
  /** RegularExpression Id. */
  int EXCLAMATION = 13;
  /** RegularExpression Id. */
  int NEW = 14;
  /** RegularExpression Id. */
  int INT = 15;
  /** RegularExpression Id. */
  int LBRACKET = 16;
  /** RegularExpression Id. */
  int RBRACKET = 17;
  /** RegularExpression Id. */
  int THIS = 18;
  /** RegularExpression Id. */
  int FALSE = 19;
  /** RegularExpression Id. */
  int TRUE = 20;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 21;
  /** RegularExpression Id. */
  int DOT = 22;
  /** RegularExpression Id. */
  int COMMA = 23;
  /** RegularExpression Id. */
  int LENGTH = 24;
  /** RegularExpression Id. */
  int AND = 25;
  /** RegularExpression Id. */
  int LESS_THAN = 26;
  /** RegularExpression Id. */
  int PLUS = 27;
  /** RegularExpression Id. */
  int MINUS = 28;
  /** RegularExpression Id. */
  int LCURL = 29;
  /** RegularExpression Id. */
  int RCURL = 30;
  /** RegularExpression Id. */
  int STAR = 31;
  /** RegularExpression Id. */
  int RETURN = 32;
  /** RegularExpression Id. */
  int SEMICOLON = 33;
  /** RegularExpression Id. */
  int IF = 34;
  /** RegularExpression Id. */
  int ELSE = 35;
  /** RegularExpression Id. */
  int WHILE = 36;
  /** RegularExpression Id. */
  int SYSOUT = 37;
  /** RegularExpression Id. */
  int ASSIGN = 38;
  /** RegularExpression Id. */
  int BOOLEAN = 39;
  /** RegularExpression Id. */
  int PUBLIC = 40;
  /** RegularExpression Id. */
  int CLASS = 41;
  /** RegularExpression Id. */
  int EXTENDS = 42;
  /** RegularExpression Id. */
  int STATIC = 43;
  /** RegularExpression Id. */
  int VOID = 44;
  /** RegularExpression Id. */
  int MAIN = 45;
  /** RegularExpression Id. */
  int STRING = 46;
  /** RegularExpression Id. */
  int IDENTIFIER = 47;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int MLComment = 1;
  /** Lexical state. */
  int SLComment = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 7>",
    "\"//\"",
    "<token of kind 9>",
    "<token of kind 10>",
    "\"(\"",
    "\")\"",
    "\"!\"",
    "\"new\"",
    "\"int\"",
    "\"[\"",
    "\"]\"",
    "\"this\"",
    "\"false\"",
    "\"true\"",
    "<INTEGER_LITERAL>",
    "\".\"",
    "\",\"",
    "\"length\"",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"{\"",
    "\"}\"",
    "\"*\"",
    "\"return\"",
    "\";\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"System.out.println\"",
    "\"=\"",
    "\"boolean\"",
    "\"public\"",
    "\"class\"",
    "\"extends\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "<IDENTIFIER>",
  };

}
